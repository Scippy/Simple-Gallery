ALTER TABLE {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_Album ADD
	ParentAlbumID int NOT NULL Default -1, 
	Description nvarchar(255) NULL,
	Password nvarchar(50) NULL
GO

ALTER TABLE {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_Photo ADD
	IsDefault bit NOT NULL Default 0 
GO

DROP PROCEDURE {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_AlbumGet
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_AlbumGet
	@AlbumID int
AS

SELECT
	[AlbumID],
	[ModuleID],
	[ParentAlbumID], 
	[Caption],
	[Description], 
	[IsPublic],
	[HomeDirectory],
	[Password] 
FROM {objectQualifier}DnnForge_SimpleGallery_Album
WHERE
	[AlbumID] = @AlbumID
GO

DROP PROCEDURE {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_GetFirstFromAlbum
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_GetFirstFromAlbum
	@AlbumID int
AS

SELECT TOP 1
	[PhotoID],
	[AlbumID], 
	[ModuleID],
	[Name],
	[Description],
	[FileName],
	[DateCreated],
	[Width],
	[Height],
	[IsDefault] 
FROM {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_Photo
WHERE
	[AlbumID] = @AlbumID
GO

DROP PROCEDURE {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_PhotoGet
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_PhotoGet
	@PhotoID int
AS

SELECT
	Photo.[PhotoID],
	Photo.[ModuleID],
	Photo.[AlbumID], 
	Photo.[Name],
	Photo.[Description],
	Photo.[FileName],
	Photo.[DateCreated],
	Photo.[Width],
	Photo.[Height],
	Photo.[IsDefault], 
	Album.[HomeDirectory] 
FROM {objectQualifier}DnnForge_SimpleGallery_Photo Photo, {objectQualifier}DnnForge_SimpleGallery_Album Album
WHERE
	Photo.[AlbumID] = Album.[AlbumID] 
	AND
	[PhotoID] = @PhotoID
GO

DROP PROCEDURE {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_PhotoList
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_PhotoList
	@AlbumID int
AS

SELECT
	Photo.[PhotoID],
	Photo.[ModuleID],
	Photo.[AlbumID], 
	Photo.[Name],
	Photo.[Description],
	Photo.[FileName],
	Photo.[DateCreated],
	Photo.[Width],
	Photo.[Height],
	Photo.[IsDefault],
	Album.[HomeDirectory] 
FROM {objectQualifier}DnnForge_SimpleGallery_Photo Photo, {objectQualifier}DnnForge_SimpleGallery_Album Album
WHERE
	Photo.[AlbumID] = Album.[AlbumID] 
	AND
	Photo.[AlbumID] = @AlbumID
ORDER BY
	Photo.[Name] 
GO

DROP PROCEDURE {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_GetFirstFromAlbum
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_GetFirstFromAlbum
	@AlbumID int
AS

SELECT TOP 1
	[PhotoID],
	[AlbumID], 
	[ModuleID],
	[Name],
	[Description],
	[FileName],
	[DateCreated],
	[Width],
	[Height],
	[IsDefault] 
FROM {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_Photo
WHERE
	[AlbumID] = @AlbumID
ORDER BY
	[IsDefault] DESC
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_SetDefaultPhoto
	@PhotoID int, 
	@AlbumID int 
AS

UPDATE {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_Photo SET
	[IsDefault] = 0
WHERE
	[AlbumID] = @AlbumID

UPDATE {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_Photo SET
	[IsDefault] = 1
WHERE
	[PhotoID] = @PhotoID
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_AlbumListAll 
	@ModuleID int,	
	@current int,
	@ShowPublicOnly bit 
as
SET NOCOUNT ON
DECLARE @level int, @line int
 
CREATE TABLE #hierarchy(AlbumID int, level int)
CREATE TABLE #stack (item int, level int)
INSERT INTO #stack VALUES (@current, 1)
SELECT @level = 1
 
WHILE @level > 0
BEGIN
   IF EXISTS (SELECT * FROM #stack WHERE level = @level)
      BEGIN
         SELECT @current = item
         FROM #stack
         WHERE level = @level
 
 	insert into #hierarchy(AlbumID, level) values(@current, @level) 
 
         DELETE FROM #stack
         WHERE level = @level
            AND item = @current
 
         INSERT #stack
            SELECT AlbumID, @level + 1
            FROM {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_Album
            WHERE parentAlbumID = @current and ModuleID = @ModuleID 
     	    ORDER BY Caption desc
 
         IF @@ROWCOUNT > 0
            SELECT @level = @level + 1
      END
   ELSE
      SELECT @level = @level - 1
END -- WHILE
 
SELECT
	Album.[AlbumID],
	Album.[ModuleID],
	Album.[ParentAlbumID], 
	Album.[Caption],
	Album.[Description], 
	Album.[IsPublic],
	Album.[HomeDirectory],
	Album.[Password], 
	(Select count(*) from {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_Photo Photo where Photo.AlbumID = Album.AlbumID) as 'NumberOfPhotos', 
	REPLICATE('.',(level-2)*2) + Album.[Caption] as 'CaptionIndented' 
FROM 
	{databaseOwner}{objectQualifier}DnnForge_SimpleGallery_Album Album, #hierarchy
WHERE 
	#hierarchy.AlbumID = Album.AlbumID
	AND
	Album.[ModuleID] = @ModuleID
	AND
	([Album].[IsPublic] = @ShowPublicOnly OR [Album].[IsPublic] = 1)

drop table #hierarchy
drop table #stack
GO

DROP PROCEDURE {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_AlbumList
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_AlbumList
	@ModuleID int,
	@ParentAlbumID int, 
	@ShowPublicOnly bit 
AS
GO

DROP PROCEDURE {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_AlbumAdd
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_AlbumAdd
	@ModuleID int,
	@ParentAlbumID int, 
	@Caption nvarchar(255),
	@Description nvarchar(255), 
	@IsPublic bit,
	@HomeDirectory nvarchar(255),
	@Password nvarchar(50) 
AS

INSERT INTO {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_Album (
	[ModuleID],
	[ParentAlbumID], 
	[Caption],
	[Description], 
	[IsPublic],
	[HomeDirectory],
	[Password]
) VALUES (
	@ModuleID,
	@ParentAlbumID, 
	@Caption,
	@Description, 
	@IsPublic,
	@HomeDirectory,
	@Password 
)

select SCOPE_IDENTITY()
GO

DROP PROCEDURE {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_AlbumUpdate
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_AlbumUpdate
	@AlbumID int, 
	@ModuleID int,
	@ParentAlbumID int, 
	@Caption nvarchar(255),
	@Description nvarchar(255), 
	@IsPublic bit,
	@HomeDirectory nvarchar(255),
	@Password nvarchar(50) 
AS

UPDATE DnnForge_SimpleGallery_Album SET
	[ModuleID] = @ModuleID,
	[ParentAlbumID] = @ParentAlbumID, 
	[Caption] = @Caption,
	[Description] = @Description, 
	[IsPublic] = @IsPublic,
	[HomeDirectory] = @HomeDirectory,
	[Password] = @Password 
WHERE
	[AlbumID] = @AlbumID
GO
