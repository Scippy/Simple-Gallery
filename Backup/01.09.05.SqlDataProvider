ALTER TABLE {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_Photo ADD
	DateUpdated DateTime NULL 
GO

UPDATE {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_Photo SET DateUpdated = DateCreated
GO

DROP PROCEDURE {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_GetFirstFromAlbum
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_GetFirstFromAlbum
	@AlbumID int,
	@ModuleID int 
AS

IF (SELECT count(PhotoID) FROM {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_Photo WHERE AlbumID = @AlbumID) > 0 
BEGIN
   SELECT TOP 1
	[PhotoID],
	[AlbumID], 
	[ModuleID],
	[Name],
	[Description],
	[FileName],
	[DateCreated],
	[Width],
	[Height],
	[IsDefault], 
	[AuthorID],
	[ApproverID],
	[IsApproved],
	[DateApproved],
	[DateUpdated]
   FROM {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_Photo
   WHERE
	[AlbumID] = @AlbumID
	AND 
	[IsApproved] = 1
   ORDER BY
	[IsDefault] DESC, NewID() 
END
ELSE
BEGIN
DECLARE @level int, @line int
 
CREATE TABLE #hierarchy(AlbumID int, level int)
CREATE TABLE #stack (item int, level int)
INSERT INTO #stack VALUES (@AlbumID, 1)
SELECT @level = 1
 
WHILE @level > 0
BEGIN
   IF EXISTS (SELECT * FROM #stack WHERE level = @level)
      BEGIN
         SELECT @AlbumID = item
         FROM #stack
         WHERE level = @level
 
 	insert into #hierarchy(AlbumID, level) values(@AlbumID, @level) 
 
         DELETE FROM #stack
         WHERE level = @level
            AND item = @AlbumID
 
         INSERT #stack
            SELECT AlbumID, @level + 1
            FROM {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_Album
            WHERE parentAlbumID = @AlbumID and ModuleID = @ModuleID 
     	    ORDER BY Caption desc
 
         IF @@ROWCOUNT > 0
            SELECT @level = @level + 1
      END
   ELSE
      SELECT @level = @level - 1
END -- WHILE
 
   SELECT TOP 1
	p.[PhotoID],
	p.[AlbumID], 
	p.[ModuleID],
	p.[Name],
	p.[Description],
	p.[FileName],
	p.[DateCreated],
	p.[Width],
	p.[Height],
	p.[IsDefault], 
	p.[AuthorID],
	p.[ApproverID],
	p.[IsApproved],
	p.[DateApproved],
	p.[DateUpdated], 
	a.[HomeDirectory] 
   FROM 
	{databaseOwner}{objectQualifier}DnnForge_SimpleGallery_Photo p, 
	{databaseOwner}{objectQualifier}DnnForge_SimpleGallery_Album a, 
	#hierarchy
   WHERE
	#hierarchy.AlbumID = a.AlbumID
	AND
	a.[AlbumID] = p.[AlbumID]
	AND 
	p.[IsApproved] = 1
   ORDER BY
	newID()

drop table #hierarchy
drop table #stack
END
GO


DROP PROCEDURE {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_PhotoList
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_PhotoList
	@ModuleID int, 
	@AlbumID int,
	@IsApproved bit,
	@MaxCount int,
	@ShowAll bit      
AS

if( @MaxCount is not null )
begin
	SET ROWCOUNT @MaxCount 
end

SELECT
	Photo.[PhotoID],
	Photo.[ModuleID],
	Photo.[AlbumID], 
	Photo.[Name],
	Photo.[Description],
	Photo.[FileName],
	Photo.[DateCreated],
	Photo.[Width],
	Photo.[Height],
	Photo.[IsDefault],
	Photo.[AuthorID],
	Photo.[ApproverID],
	Photo.[IsApproved],
	Photo.[DateApproved],
	Photo.[DateUpdated],
	Album.[HomeDirectory], 
	Album.[Caption] as 'AlbumName',   
	Author.[FirstName] as 'AuthorFirstName',
	Author.[LastName] as 'AuthorLastName', 
	Author.[UserName] as 'AuthorUserName', 
	Approver.[FirstName] as 'ApproverFirstName',
	Approver.[LastName] as 'ApproverLastName', 
	Approver.[UserName] as 'ApproverUserName'
FROM         
	{objectQualifier}DnnForge_SimpleGallery_Photo Photo INNER JOIN
		{objectQualifier}DnnForge_SimpleGallery_Album Album ON Photo.AlbumID = Album.AlbumID LEFT OUTER JOIN
        {objectQualifier}Users Author ON Photo.AuthorID = Author.UserID LEFT OUTER JOIN
        {objectQualifier}Users Approver ON Photo.ApproverID = Approver.UserID 
WHERE
	(@AlbumID is null or Photo.[AlbumID] = @AlbumID) 
	AND
	Photo.[ModuleID] = @ModuleID 
	AND
	(@ShowAll = 1 or Photo.[IsApproved] = @IsApproved) 
ORDER BY
	Photo.[Name] 
GO

DROP PROCEDURE {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_PhotoGet
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_PhotoGet
	@PhotoID int
AS

SELECT
	Photo.[PhotoID],
	Photo.[ModuleID],
	Photo.[AlbumID], 
	Photo.[Name],
	Photo.[Description],
	Photo.[FileName],
	Photo.[DateCreated],
	Photo.[Width],
	Photo.[Height],
	Photo.[IsDefault], 
	Photo.[AuthorID],
	Photo.[ApproverID],
	Photo.[IsApproved],
	Photo.[DateApproved],
	Photo.[DateUpdated],
	Album.[HomeDirectory],
	Album.[Caption] as 'AlbumName',   
	Author.[FirstName] as 'AuthorFirstName',
	Author.[LastName] as 'AuthorLastName', 
	Author.[UserName] as 'AuthorUserName', 
	Approver.[FirstName] as 'ApproverFirstName',
	Approver.[LastName] as 'ApproverLastName', 
	Approver.[UserName] as 'ApproverUserName'  
FROM         
	{objectQualifier}DnnForge_SimpleGallery_Photo Photo INNER JOIN
		{objectQualifier}DnnForge_SimpleGallery_Album Album ON Photo.AlbumID = Album.AlbumID LEFT OUTER JOIN
        {objectQualifier}Users Author ON Photo.AuthorID = Author.UserID LEFT OUTER JOIN
        {objectQualifier}Users Approver ON Photo.ApproverID = Approver.UserID 
WHERE
	[PhotoID] = @PhotoID
GO

DROP PROCEDURE {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_GetRandomPhoto
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_GetRandomPhoto
	@AlbumID int,
	@ModuleID int,
	@Count int  
AS

DECLARE @level int, @line int
 
CREATE TABLE #hierarchy(AlbumID int, level int)
CREATE TABLE #stack (item int, level int)
INSERT INTO #stack VALUES (@AlbumID, 1)
SELECT @level = 1
 
WHILE @level > 0
BEGIN
   IF EXISTS (SELECT * FROM #stack WHERE level = @level)
      BEGIN
         SELECT @AlbumID = item
         FROM #stack
         WHERE level = @level
 
 	insert into #hierarchy(AlbumID, level) values(@AlbumID, @level) 
 
         DELETE FROM #stack
         WHERE level = @level
            AND item = @AlbumID
 
         INSERT #stack
            SELECT AlbumID, @level + 1
            FROM {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_Album
            WHERE parentAlbumID = @AlbumID and ModuleID = @ModuleID 
     	    ORDER BY Caption desc
 
         IF @@ROWCOUNT > 0
            SELECT @level = @level + 1
      END
   ELSE
      SELECT @level = @level - 1
END -- WHILE
 
SET ROWCOUNT @Count

   SELECT 
	p.[PhotoID],
	p.[AlbumID], 
	p.[ModuleID],
	p.[Name],
	p.[Description],
	p.[FileName],
	p.[DateCreated],
	p.[Width],
	p.[Height],
	p.[IsDefault],
	p.[AuthorID],
	p.[ApproverID],
	p.[IsApproved],
	p.[DateApproved],
	p.[DateUpdated],
	a.[HomeDirectory] 
   FROM 
	{databaseOwner}{objectQualifier}DnnForge_SimpleGallery_Photo p, 
	{databaseOwner}{objectQualifier}DnnForge_SimpleGallery_Album a, 
	#hierarchy
   WHERE
	#hierarchy.AlbumID = a.AlbumID
	AND
	a.[AlbumID] = p.[AlbumID]
	AND
	p.[IsApproved] = 1 
   ORDER BY
	newID()

drop table #hierarchy
drop table #stack
GO


DROP PROCEDURE {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_PhotoAdd
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_PhotoAdd
	@ModuleID int,
	@AlbumID int,
	@Name nvarchar(100),
	@Description nvarchar(255),
	@FileName nvarchar(255),
	@DateCreated datetime, 
	@Width int,
	@Height int,
	@AuthorID int,
	@ApproverID int,
	@IsApproved bit,
	@DateApproved DateTime,
	@DateUpdated DateTime  
AS

INSERT INTO {objectQualifier}DnnForge_SimpleGallery_Photo (
	[ModuleID],
	[AlbumID], 
	[Name],
	[Description],
	[FileName],
	[DateCreated],
	[Width],
	[Height],  
	[AuthorID],
	[ApproverID],
	[IsApproved],
	[DateApproved],
	[DateUpdated] 
) VALUES (
	@ModuleID,
	@AlbumID, 
	@Name,
	@Description,
	@FileName,
	@DateCreated, 
	@Width,
	@Height,
	@AuthorID,
	@ApproverID, 
	@IsApproved,
	@DateApproved,
	@DateUpdated  
)

select SCOPE_IDENTITY()
GO

DROP PROCEDURE {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_PhotoUpdate
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_PhotoUpdate
	@PhotoID int, 
	@ModuleID int, 
	@AlbumID int,
	@Name nvarchar(100), 
	@Description nvarchar(255), 
	@FileName nvarchar(255), 
	@DateCreated datetime, 
	@Width int,
	@Height int,
	@AuthorID int,
	@ApproverID int,
	@IsApproved bit,
	@DateApproved DateTime,
	@DateUpdated DateTime  
AS

UPDATE {objectQualifier}DnnForge_SimpleGallery_Photo SET
	[ModuleID] = @ModuleID,
	[AlbumID] = @AlbumID,
	[Name] = @Name,
	[Description] = @Description,
	[FileName] = @FileName,
	[DateCreated] = @DateCreated,
	[Width] = @Width,
	[Height] = @Height,
	[AuthorID] = @AuthorID,
	[ApproverID] = @ApproverID, 
	[IsApproved] = @IsApproved,
	[DateApproved] = @DateApproved,
	[DateUpdated] = @DateUpdated   
WHERE
	[PhotoID] = @PhotoID
GO
