ALTER TABLE {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_Album ADD
	AlbumOrder int NOT NULL CONSTRAINT DF_{objectQualifier}DnnForge_SimpleGallery_Album_AlbumOrder DEFAULT 0
GO

DROP PROCEDURE {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_AlbumList
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_AlbumList
	@ModuleID int,
	@ParentAlbumID int, 
	@ShowPublicOnly bit 
AS

SELECT
	Album.[AlbumID],
	Album.[ModuleID],
	Album.[ParentAlbumID], 
	Album.[Caption],
	Album.[Description], 
	Album.[IsPublic],
	Album.[HomeDirectory],
	Album.[Password], 
	Album.[AlbumOrder], 
	(select count(*) from {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_Photo where AlbumID = Album.AlbumID and IsApproved = 1) as 'NumberOfPhotos',   
	(select count(*) from {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_Album where ParentAlbumID = Album.AlbumID and IsPublic = 1) as 'NumberOfAlbums',   
	(select count(*) from {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_Album a, {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_Photo p where a.ParentAlbumID = Album.AlbumID and a.AlbumID = p.AlbumID and a.IsPublic = 1 and p.IsApproved = 1) as 'NumberOfAlbumPhotos'  
FROM         
	{databaseOwner}{objectQualifier}DnnForge_SimpleGallery_Album Album
WHERE
	Album.[ModuleID] = @ModuleID
	AND
	Album.[ParentAlbumID] = @ParentAlbumID 
	AND
	([Album].[IsPublic] = @ShowPublicOnly OR [Album].[IsPublic] = 1)
ORDER BY
	Album.[AlbumOrder], Album.[Caption]
GO

DROP PROCEDURE {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_AlbumUpdate
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_AlbumUpdate
	@AlbumID int, 
	@ModuleID int,
	@ParentAlbumID int, 
	@Caption nvarchar(255),
	@Description nvarchar(255), 
	@IsPublic bit,
	@HomeDirectory nvarchar(255),
	@Password nvarchar(50),
	@AlbumOrder int 
AS

UPDATE {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_Album SET
	[ModuleID] = @ModuleID,
	[ParentAlbumID] = @ParentAlbumID, 
	[Caption] = @Caption,
	[Description] = @Description, 
	[IsPublic] = @IsPublic,
	[HomeDirectory] = @HomeDirectory,
	[Password] = @Password,
	[AlbumOrder] = @AlbumOrder 
WHERE
	[AlbumID] = @AlbumID
GO

DROP PROCEDURE {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_AlbumGet
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_AlbumGet
	@AlbumID int
AS

SELECT
	[AlbumID],
	[ModuleID],
	[ParentAlbumID], 
	[Caption],
	[Description], 
	[IsPublic],
	[HomeDirectory],
	[Password],
	[AlbumOrder] 
FROM {objectQualifier}DnnForge_SimpleGallery_Album
WHERE
	[AlbumID] = @AlbumID
GO

DROP PROCEDURE {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_AlbumListAll
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_AlbumListAll 
	@ModuleID int,	
	@current int,
	@ShowPublicOnly bit 
as
SET NOCOUNT ON
DECLARE @level int, @line int
 
CREATE TABLE #hierarchy(AlbumID int, level int)
CREATE TABLE #stack (item int, level int)
INSERT INTO #stack VALUES (@current, 1)
SELECT @level = 1
 
WHILE @level > 0
BEGIN
   IF EXISTS (SELECT * FROM #stack WHERE level = @level)
      BEGIN
         SELECT @current = item
         FROM #stack
         WHERE level = @level
 
 	insert into #hierarchy(AlbumID, level) values(@current, @level) 
 
         DELETE FROM #stack
         WHERE level = @level
            AND item = @current
 
         INSERT #stack
            SELECT AlbumID, @level + 1
            FROM {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_Album
            WHERE parentAlbumID = @current and ModuleID = @ModuleID 
     	    ORDER BY AlbumOrder desc, Caption desc
 
         IF @@ROWCOUNT > 0
            SELECT @level = @level + 1
      END
   ELSE
      SELECT @level = @level - 1
END -- WHILE
 
SELECT
	Album.[AlbumID],
	Album.[ModuleID],
	Album.[ParentAlbumID], 
	Album.[Caption],
	Album.[Description], 
	Album.[IsPublic],
	Album.[HomeDirectory],
	Album.[Password], 
	Album.[AlbumOrder], 
	(Select count(*) from {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_Photo Photo where Photo.AlbumID = Album.AlbumID) as 'NumberOfPhotos', 
	REPLICATE('.',(level-2)*2) + Album.[Caption] as 'CaptionIndented' 
FROM 
	{databaseOwner}{objectQualifier}DnnForge_SimpleGallery_Album Album, #hierarchy
WHERE 
	#hierarchy.AlbumID = Album.AlbumID
	AND
	Album.[ModuleID] = @ModuleID
	AND
	([Album].[IsPublic] = @ShowPublicOnly OR [Album].[IsPublic] = 1)

drop table #hierarchy
drop table #stack
GO

DROP PROCEDURE {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_AlbumAdd
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_AlbumAdd
	@ModuleID int,
	@ParentAlbumID int, 
	@Caption nvarchar(255),
	@Description nvarchar(255), 
	@IsPublic bit,
	@HomeDirectory nvarchar(255),
	@Password nvarchar(50),
	@AlbumOrder int  
AS

INSERT INTO {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_Album (
	[ModuleID],
	[ParentAlbumID], 
	[Caption],
	[Description], 
	[IsPublic],
	[HomeDirectory],
	[Password],
	[AlbumOrder] 
) VALUES (
	@ModuleID,
	@ParentAlbumID, 
	@Caption,
	@Description, 
	@IsPublic,
	@HomeDirectory,
	@Password,
	@AlbumOrder  
)

select SCOPE_IDENTITY()
GO
