ALTER TABLE {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_Album
	ADD [Description2] nvarchar(2000)
GO

UPDATE {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_Album
SET [Description2] = [Description]
GO

ALTER TABLE {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_Album
	DROP COLUMN [Description]
GO

ALTER TABLE {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_Album
	ADD [Description] nvarchar(2000)
GO

UPDATE {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_Album
SET [Description] = [Description2]
GO

ALTER TABLE {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_Album
	DROP COLUMN [Description2]
GO

ALTER TABLE {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_Album ADD
	CreateDate datetime NULL
GO

UPDATE {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_Album
SET CreateDate = (select top 1 DateCreated from {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_Photo where {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_Photo.AlbumID = {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_Album.AlbumID Order By DateCreated ASC)
GO

UPDATE {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_Album
SET CreateDate = GetDate()
WHERE CreateDate is null 
GO

DROP PROCEDURE {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_AlbumAdd
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_AlbumAdd
	@ModuleID int,
	@ParentAlbumID int, 
	@Caption nvarchar(255),
	@Description nvarchar(2000), 
	@IsPublic bit,
	@HomeDirectory nvarchar(255),
	@Password nvarchar(50),
	@AlbumOrder int,
	@CreateDate datetime   
AS

INSERT INTO {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_Album (
	[ModuleID],
	[ParentAlbumID], 
	[Caption],
	[Description], 
	[IsPublic],
	[HomeDirectory],
	[Password],
	[AlbumOrder],
	[CreateDate]  
) VALUES (
	@ModuleID,
	@ParentAlbumID, 
	@Caption,
	@Description, 
	@IsPublic,
	@HomeDirectory,
	@Password,
	@AlbumOrder,
	@CreateDate  
)

select SCOPE_IDENTITY()
GO

DROP PROCEDURE {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_AlbumUpdate
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_AlbumUpdate
	@AlbumID int, 
	@ModuleID int,
	@ParentAlbumID int, 
	@Caption nvarchar(255),
	@Description nvarchar(255), 
	@IsPublic bit,
	@HomeDirectory nvarchar(255),
	@Password nvarchar(50),
	@AlbumOrder int,
	@CreateDate datetime 
AS

UPDATE {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_Album SET
	[ModuleID] = @ModuleID,
	[ParentAlbumID] = @ParentAlbumID, 
	[Caption] = @Caption,
	[Description] = @Description, 
	[IsPublic] = @IsPublic,
	[HomeDirectory] = @HomeDirectory,
	[Password] = @Password,
	[AlbumOrder] = @AlbumOrder,
	[CreateDate] = @CreateDate
WHERE
	[AlbumID] = @AlbumID
GO

DROP PROCEDURE {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_AlbumGet
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_AlbumGet
	@AlbumID int
AS

SELECT
	[AlbumID],
	[ModuleID],
	[ParentAlbumID], 
	[Caption],
	[Description], 
	[IsPublic],
	[HomeDirectory],
	[Password],
	[AlbumOrder],
	[CreateDate]  
FROM {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_Album
WHERE
	[AlbumID] = @AlbumID
GO

DROP PROCEDURE {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_AlbumGetByPath
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_AlbumGetByPath
	@ModuleID int, 
	@HomeDirectory nvarchar(255) 
AS

SELECT TOP 1 
	[AlbumID],
	[ModuleID],
	[ParentAlbumID], 
	[Caption],
	[Description], 
	[IsPublic],
	[HomeDirectory],
	[Password],
	[AlbumOrder],
	[CreateDate]  
FROM {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_Album
WHERE
	[ModuleID] = @ModuleID
	and
	[HomeDirectory] = @HomeDirectory
GO

DROP PROCEDURE {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_AlbumListAll
GO

CREATE PROCEDURE {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_AlbumListAll 
	@ModuleID int,	
	@ParentAlbumID int,
	@ShowPublicOnly bit,
	@ShowChildren bit,
	@SortBy int,
	@SortOrder int 
as

IF( @ShowChildren = 0 )
BEGIN
SELECT
	Album.[AlbumID],
	Album.[ModuleID],
	Album.[ParentAlbumID], 
	Album.[Caption],
	Album.[Description], 
	Album.[IsPublic],
	Album.[HomeDirectory],
	Album.[Password], 
	Album.[AlbumOrder], 
	Album.[CreateDate], 
	(select count(*) from {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_Photo where AlbumID = Album.AlbumID and IsApproved = 1) as 'NumberOfPhotos',   
	(select count(*) from {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_Album where ParentAlbumID = Album.AlbumID and IsPublic = 1) as 'NumberOfAlbums',   
	(select count(*) from {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_Album a, {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_Photo p where a.ParentAlbumID = Album.AlbumID and a.AlbumID = p.AlbumID and a.IsPublic = 1 and p.IsApproved = 1) as 'NumberOfAlbumPhotos'  
FROM         
	{databaseOwner}{objectQualifier}DnnForge_SimpleGallery_Album Album
WHERE
	Album.[ModuleID] = @ModuleID
	AND
	Album.[ParentAlbumID] = @ParentAlbumID 
	AND
	([Album].[IsPublic] = @ShowPublicOnly OR [Album].[IsPublic] = 1)
ORDER BY
	CASE
		WHEN @SortBy = 0 and @SortOrder = 0 THEN Album.[Caption]     
      	END DESC,
	CASE
		WHEN @SortBy = 0 and @SortOrder = 1 THEN Album.[Caption]   
      	END ASC,
	CASE
		WHEN @SortBy = 1 and @SortOrder = 0 THEN Album.[CreateDate]  
      	END DESC,
	CASE
		WHEN @SortBy = 1 and @SortOrder = 1 THEN Album.[CreateDate]    
      	END ASC,
	CASE
		WHEN @SortBy = 2 and @SortOrder = 0 THEN Album.[AlbumOrder]
      	END DESC,
	CASE
		WHEN @SortBy = 2 and @SortOrder = 1 THEN Album.[AlbumOrder]   
      	END ASC
END
ELSE
BEGIN
SET NOCOUNT ON
DECLARE @level int, @line int, @current int 

DECLARE @hierarchy TABLE(AlbumID int, level int)
DECLARE  @stack TABLE(item int, level int)
INSERT INTO @stack VALUES (@ParentAlbumID, 1)
SELECT @level = 1
 
WHILE @level > 0
BEGIN
   IF EXISTS (SELECT * FROM @stack WHERE level = @level)
      BEGIN
         SELECT @current = item
         FROM @stack
         WHERE level = @level
 
IF( @ParentAlbumID = -1 OR @ParentAlbumID != @current )
BEGIN
 	insert into @hierarchy(AlbumID, level) values(@current, @level) 
END
 
         DELETE FROM @stack
         WHERE level = @level
            AND item = @current
 
         INSERT @stack
            SELECT Album.AlbumID, @level + 1
            FROM {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_Album Album
            WHERE Album.parentAlbumID = @current and ModuleID = @ModuleID 
			ORDER BY
				CASE
					WHEN @SortBy = 0 and @SortOrder = 1 THEN Album.[Caption]     
      				END DESC,
				CASE
					WHEN @SortBy = 0 and @SortOrder = 0 THEN Album.[Caption]   
      				END ASC,
				CASE
					WHEN @SortBy = 1 and @SortOrder = 1 THEN Album.[CreateDate]  
      				END DESC,
				CASE
					WHEN @SortBy = 1 and @SortOrder = 0 THEN Album.[CreateDate]    
      				END ASC,
				CASE
					WHEN @SortBy = 2 and @SortOrder = 1 THEN Album.[AlbumOrder]
      				END DESC,
				CASE
					WHEN @SortBy = 2 and @SortOrder = 0 THEN Album.[AlbumOrder]   
      				END ASC
     	    --ORDER BY AlbumOrder desc, Caption desc
 
         IF @@ROWCOUNT > 0
            SELECT @level = @level + 1
      END
   ELSE
      SELECT @level = @level - 1
END -- WHILE
 
SELECT
	Album.[AlbumID],
	Album.[ModuleID],
	Album.[ParentAlbumID], 
	Album.[Caption],
	Album.[Description], 
	Album.[IsPublic],
	Album.[HomeDirectory],
	Album.[Password], 
	Album.[AlbumOrder], 
	Album.[CreateDate], 
	(Select count(*) from {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_Photo Photo where Photo.AlbumID = Album.AlbumID) as 'NumberOfPhotos', 
	(select count(*) from {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_Album where ParentAlbumID = Album.AlbumID and IsPublic = 1) as 'NumberOfAlbums',   
	(select count(*) from {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_Album a, {databaseOwner}{objectQualifier}DnnForge_SimpleGallery_Photo p where a.ParentAlbumID = Album.AlbumID and a.AlbumID = p.AlbumID and a.IsPublic = 1 and p.IsApproved = 1) as 'NumberOfAlbumPhotos',
	REPLICATE('.',(level-2)*2) + Album.[Caption] as 'CaptionIndented' 
FROM 
	{databaseOwner}{objectQualifier}DnnForge_SimpleGallery_Album Album, @hierarchy h
WHERE 
	h.AlbumID = Album.AlbumID
	AND
	Album.[ModuleID] = @ModuleID
	AND
	([Album].[IsPublic] = @ShowPublicOnly OR [Album].[IsPublic] = 1)

--drop table @hierarchy
--drop table @stack
END
GO
